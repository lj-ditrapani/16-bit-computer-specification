RAM for I/O
===========

The last 1024 Words of ram are reserved for I/O registers ($FC00-$FFFF).

Purpose         Words   Decimal          Hex
--------------------------------------------------------
Gamepad             1   64,512-64,512   $FC00-$FC00
Keyboard            3   64,513-64,515   $FC01-$fC03
Audio              16   64,544-64,559   $FC20-$FC2F
LinkHub+Disk      128   64,640-64,767   $FC80-$FCFF
   32   Colors              64 8-bit colors; 16 groups of 4 colors
   64   Color set indexes   256 large tile color indexes; 4 bits per index
  375   Foreground Cells    30 x 25 cells x 0.5 word
  375   Background Cells    30 x 25 cells x 0.5 word
2,048   Tiles               256 8 x 8 2 bpp tiles (8 W / tile)

Total: 2,894 words
```


Frame Interrupt (FI)
----------------------------

The computer starts executing with the PC set to $0000.
At the beginning of each frame after the first, the VDP
sets the program counter (PC) to $0400.


Reading and writing to the I/O RAM
----------------------------------

The program should keep a working copy of the I/O
data in $F800-$FBFF.  The program should not change
the contents of I/O RAM at any time during the frame
but only at the begining of the frame.
The main loop (starting at $0400) should copy the read
I/O registers to the working copy and then write the
next frame's screen data from the working copy 
to the I/O registers.
The VDP asserts the Frame Interrupt (FI) during the
monitor's vertical sync when the VDP is not reading or
writing the I/O RAM.
Once everything has been copied, the CPU can use the
remaining time of the frame to
use the copied game pad input to update the game state
and compute a new set of screen data.


Video
-----

See video.md file for more details on the Video RAM I/O.
