RAM for I/O

The last 2 1024 Words of ram are reserved for I/O registers.
Only the first set of 1024 addresses ($F800-$FBFF) are
accessible by the CPU.
The last 1024 addresses ($FC00-$FFFF) are not accessible.
Reading these addresses returns random values and writing these
addresses does nothing.

Purpose         Words   Decimal          Hex
--------------------------------------------------------
FIV                 1   63,488-63,488   $F800-$F800
Gamepad             1   63,504-63,504   $F810-$F810
Keyboard            3   63,505-63,507   $F811-$f813
Audio              16   63,520-63,535   $F820-$F82F
Color sets         64   63,552-63,615   $F840-$F87F
LinkHub+Disk      128   63,616-63,743   $F880-$F8FF
Video             768   63,744-64,511   $F900-$FBFF

* FIV = Frame interrupt vector


Frame Interrupt Vector (FIV)
----------------------------
The frame interrupt RAM cell is copied to the second buffer by the
I/O device on each frame.

At the beginning of each frame, the GPU sets the program counter (PC)
to the address found in $FC00.


Double Buffering
----------------

The ram section $F800-$FBFF is double buffered.

This system uses double buffering, so there are actually
two sets of 1024 words I/O RAM.
For a single frame, double buffering allows the I/O device to
have complete access to the RAM it needs while the CPU can
read/write to its own I/O RAM.  At the end of the frame, the
RAM sets are swapped.  The cpu gets access to the RAM the I/O
device as using previously, and the I/O device gets access
to the RAM the cpu was using previously.

For example, the GPU renders one video RAM
while the CPU writes the next frame on the other video RAM.
At the end of each frame, the video RAM sets are swapped.


Video
-----

See video.md file for more details on the Video RAM I/O.
