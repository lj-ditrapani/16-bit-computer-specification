4 MHz
dual bus (separate instruction bus & data bus)
2.6775 mips cpu
All instructions take exactly 3 cycles to execute.
- 1. Fetch
- 2. execute
- 3. memory read/write
But cycle 1 "Fetch" for the next instruction happens concurrently with cycle 3 "memory read/write" from the previous instruction.  So the cpu effectively executes an instruction every 2 cycles.  The fetch is always correct, because the next PC is set in cycle 2.
The VDP can use the data bus during cycle 2 of each instruction (every other cycle).
Max pin-out per chip is 80 pins.


  +------------------------------------------------------------+
  |                          Cartridge                         |
  |  +--------------+    +--------------+                      |
  |  |   PRG ROM    |    |   DATA ROM   |                      |
  |  |     64KW     |    |     32KW     |                      |
  |  | Machine      |    |  Data ROM    |                      |
  |  | Instructions |    |            EN|                      |
  |  +--------------+    +--------------+                      |
  |     | |                    | |     |                       |
  +-+  A| |D                  A| |D    V                     +-+
    |   | |                    | |                           |
    +---|-|--------------------|-|---------------------------+
        | |                    | |
+-+     | |         /----------/ |                             +-+
| |     | |         | /----------/                             | |
| +-----|-|---------|-|----------------------------------------+ |
|       | |         | |                                          |
|       | |         | |                                          |
| +--------------+  | |  +--------------+       +--------------+ |
| |     ^ v     A|--| |  |              |       |   VDP        | |
| |    PC Ins   D|--|-|  |  DATA        |       |   Video      |-|-> Video signal output
| |     ^ v      |  | |  |  RAM         |       |   Display    | |
| |  16-bit CPU  |  | |  |  32KW        |      D|   Processor  | |
| |              |  |-|--|A             |  /----|              | |
| |              |  | |--|D             |  | /--|              | |
| |C/AI  DOE DAE |  | |  |            EN|  | | A|      CI/AI   | |
| +--------------+  | |  +--------------+  | |  +--------------+ |
|  |     |   |      | |                    | |           |       |
|  ^     V   V      | \--------------------| |           V       |
|                   \------------------------|                   |
|                                          | |                   |
|                                          | |                   |
|                                          | |  +--------------+ |
|                                          | |  |   APU        | |
|                                          | |  |   Audio &    |-|-> Audio signal output
|                                          | |  |   Peripheral | |
|                                          | | D|   Unit       |-|-< Gamepad input x4
|                                          | \--|              | |
|                                          \----|              |-|<> Cassette and LinkHub
|                                              A|      CI/AI   | |
|                                               +--------------+ |
|                                                        |       |
|                                                        ^       |
|                                                                |
|                                                                |
|                            Console                             |
+----------------------------------------------------------------+


W = 16-bit word
1 W = 2B
1 KW = 2 KB
A bus = 16 wire address lines
D bus = 16 wire data lines
DOE line = 1 wire enable line for DATA ROM chip
DAE line = 1 wire enable line for DATA RAM chip
CPU can assert the DOE and DAE lines
On even CPU cycles (execute cycle), the CPU does the following:
- sets DOE low and DAE high so the vdp can access DATA RAM.
- sets the 3 most significant bits of the address lines to access the last 4k of DATA RAM to complete the VDP address memory reads.
- sets the memory read/write pin to read, since the vdp only reads RAM
When the CPU is disabled, the CPU does the following
- sets DOE low and DAE high so the APU can access DATA RAM.
- sets the 3 most significant bits of the address lines to access the last 4k of DATA RAM to complete the APU address memory accesses.
EN = memory chip enable input
CI = vertical blank CPU interrupt (from VDP to CPU & APU)
AI = vertical blank APU interrupt (from VDP to CPU & APU)

CPU package: 9 lines + 16*3 + 15 = 72 pins
instruction address x 16
data address x 15
data lines x 16 x 2
high voltage
ground
clock
cpu_interrupt
apu_interrupt
dataRomEnable
dataRamEnable
memory read/write
reset

Cartridge: 4 lines + 16*4 = 68 pins
address x 16 x 2
data x 16 x 2
+5v
gnd
clk
dataRomEnable

VDP package: 12 + 12 + 16 = 40 pins
address x 12 (only uses bottom 4k of the 32k of DATA RAM)
data x 16
high voltage
ground
clock
cpu_interrupt
apu_interrupt
memory read/write
reset
video Red
video Green
video Blue
vsync
hsync

APU package: 45 pins
address x 12 (only uses bottom 1k of the 32k of DATA RAM)
data x 16
high voltage
ground
clock
cpu_interrupt
apu_interrupt
memory read/write
reset
gamepad 6 lines
audio mono output 1 line
cassette/linkhub data 1 lines
linkhub control 2 lines

Gamepad lines:
- latch (shared between controllers)
- gamepad clock (shared between controllers, different from system clock)
- data (4x, 1 per controller)
- reuse system ground and +5V
